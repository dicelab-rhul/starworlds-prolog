package uk.ac.rhul.cs.dice.starworlds.prolog.swi.term;

import org.jpl7.Atom;
import org.jpl7.Compound;
import org.jpl7.Term;

import uk.ac.rhul.cs.dice.starworlds.perception.CommunicationPerception;

/**
 * The default {@link SWITermFactory} for {@link CommunicationPerception}s. <br>
 * Terms generated by this factory have the following format: received(Sender, Message). <br>
 * It should be noted that the message will always be converted to a {@link String}. If the message consists of data
 * that is more complex it is recommended that a custom {@link SWITermFactory} is written.
 * 
 * @author Ben Wilkins
 *
 */
public class CommunicationPerceptionTermFactory implements SWITermFactory {

	public static final String COMMUNICATIONPERCEPTIONTERMNAME = "received";

	@Override
	public Term toTerm(Object arg) throws Exception {
		CommunicationPerception perception = (CommunicationPerception) arg;
		return new Compound(COMMUNICATIONPERCEPTIONTERMNAME, new Term[] { new Atom(perception.getSender()),
				new Atom(perception.getMessage().toString()) });
	}

	@Override
	public Object fromTerm(Term term) throws Exception {
		return new CommunicationPerception(term.arg(1).toString(), term.arg(2).toString());
	}
}
